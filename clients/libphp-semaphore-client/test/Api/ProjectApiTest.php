<?php
/**
 * ProjectApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.8.34
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ProjectApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ProjectApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for projectProjectIdDelete
     *
     * Delete project.
     *
     */
    public function testProjectProjectIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdEnvironmentEnvironmentIdDelete
     *
     * Removes environment.
     *
     */
    public function testProjectProjectIdEnvironmentEnvironmentIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdEnvironmentEnvironmentIdPut
     *
     * Update environment.
     *
     */
    public function testProjectProjectIdEnvironmentEnvironmentIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdEnvironmentGet
     *
     * Get environment.
     *
     */
    public function testProjectProjectIdEnvironmentGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdEnvironmentPost
     *
     * Add environment.
     *
     */
    public function testProjectProjectIdEnvironmentPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdEventsGet
     *
     * Get Events related to this project.
     *
     */
    public function testProjectProjectIdEventsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdGet
     *
     * Fetch project.
     *
     */
    public function testProjectProjectIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdInventoryGet
     *
     * Get inventory.
     *
     */
    public function testProjectProjectIdInventoryGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdInventoryInventoryIdDelete
     *
     * Removes inventory.
     *
     */
    public function testProjectProjectIdInventoryInventoryIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdInventoryInventoryIdPut
     *
     * Updates inventory.
     *
     */
    public function testProjectProjectIdInventoryInventoryIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdInventoryPost
     *
     * create inventory.
     *
     */
    public function testProjectProjectIdInventoryPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdKeysGet
     *
     * Get access keys linked to project.
     *
     */
    public function testProjectProjectIdKeysGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdKeysKeyIdDelete
     *
     * Removes access key.
     *
     */
    public function testProjectProjectIdKeysKeyIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdKeysKeyIdPut
     *
     * Updates access key.
     *
     */
    public function testProjectProjectIdKeysKeyIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdKeysPost
     *
     * Add access key.
     *
     */
    public function testProjectProjectIdKeysPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdPut
     *
     * Update project.
     *
     */
    public function testProjectProjectIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdRepositoriesGet
     *
     * Get repositories.
     *
     */
    public function testProjectProjectIdRepositoriesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdRepositoriesPost
     *
     * Add repository.
     *
     */
    public function testProjectProjectIdRepositoriesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdRepositoriesRepositoryIdDelete
     *
     * Removes repository.
     *
     */
    public function testProjectProjectIdRepositoriesRepositoryIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdTasksGet
     *
     * Get Tasks related to current project.
     *
     */
    public function testProjectProjectIdTasksGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdTasksLastGet
     *
     * Get last 200 Tasks related to current project.
     *
     */
    public function testProjectProjectIdTasksLastGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdTasksPost
     *
     * Starts a job.
     *
     */
    public function testProjectProjectIdTasksPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdTasksTaskIdDelete
     *
     * Deletes task (including output).
     *
     */
    public function testProjectProjectIdTasksTaskIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdTasksTaskIdGet
     *
     * Get a single task.
     *
     */
    public function testProjectProjectIdTasksTaskIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdTasksTaskIdOutputGet
     *
     * Get task output.
     *
     */
    public function testProjectProjectIdTasksTaskIdOutputGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdTemplatesGet
     *
     * Get template.
     *
     */
    public function testProjectProjectIdTemplatesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdTemplatesPost
     *
     * create template.
     *
     */
    public function testProjectProjectIdTemplatesPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdTemplatesTemplateIdDelete
     *
     * Removes template.
     *
     */
    public function testProjectProjectIdTemplatesTemplateIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdTemplatesTemplateIdGet
     *
     * Get template.
     *
     */
    public function testProjectProjectIdTemplatesTemplateIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdTemplatesTemplateIdPut
     *
     * Updates template.
     *
     */
    public function testProjectProjectIdTemplatesTemplateIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdUsersGet
     *
     * Get users linked to project.
     *
     */
    public function testProjectProjectIdUsersGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdUsersPost
     *
     * Link user to project.
     *
     */
    public function testProjectProjectIdUsersPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdUsersUserIdAdminDelete
     *
     * Revoke admin privileges.
     *
     */
    public function testProjectProjectIdUsersUserIdAdminDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdUsersUserIdAdminPost
     *
     * Makes user admin.
     *
     */
    public function testProjectProjectIdUsersUserIdAdminPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdUsersUserIdDelete
     *
     * Removes user from project.
     *
     */
    public function testProjectProjectIdUsersUserIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdViewsGet
     *
     * Get view.
     *
     */
    public function testProjectProjectIdViewsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdViewsPost
     *
     * create view.
     *
     */
    public function testProjectProjectIdViewsPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdViewsViewIdDelete
     *
     * Removes view.
     *
     */
    public function testProjectProjectIdViewsViewIdDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdViewsViewIdGet
     *
     * Get view.
     *
     */
    public function testProjectProjectIdViewsViewIdGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectProjectIdViewsViewIdPut
     *
     * Updates view.
     *
     */
    public function testProjectProjectIdViewsViewIdPut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
