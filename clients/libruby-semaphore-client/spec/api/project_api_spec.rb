=begin
#API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 2.8.34

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::ProjectApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ProjectApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::ProjectApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProjectApi' do
    it 'should create an instance of ProjectApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::ProjectApi)
    end
  end

  # unit tests for project_project_id_delete
  # Delete project
  # @param project_id Project ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_environment_environment_id_delete
  # Removes environment
  # @param project_id Project ID
  # @param environment_id environment ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_environment_environment_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_environment_environment_id_put
  # Update environment
  # @param project_id Project ID
  # @param environment_id environment ID
  # @param environment 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_environment_environment_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_environment_get
  # Get environment
  # @param project_id Project ID
  # @param sort sorting name
  # @param order ordering manner
  # @param [Hash] opts the optional parameters
  # @return [Array<Environment>]
  describe 'project_project_id_environment_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_environment_post
  # Add environment
  # @param project_id Project ID
  # @param environment 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_environment_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_events_get
  # Get Events related to this project
  # @param project_id Project ID
  # @param [Hash] opts the optional parameters
  # @return [Array<Event>]
  describe 'project_project_id_events_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_get
  # Fetch project
  # @param project_id Project ID
  # @param [Hash] opts the optional parameters
  # @return [Project]
  describe 'project_project_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_inventory_get
  # Get inventory
  # @param project_id Project ID
  # @param sort sorting name
  # @param order ordering manner
  # @param [Hash] opts the optional parameters
  # @return [Array<Inventory>]
  describe 'project_project_id_inventory_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_inventory_inventory_id_delete
  # Removes inventory
  # @param project_id Project ID
  # @param inventory_id inventory ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_inventory_inventory_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_inventory_inventory_id_put
  # Updates inventory
  # @param project_id Project ID
  # @param inventory_id inventory ID
  # @param inventory 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_inventory_inventory_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_inventory_post
  # create inventory
  # @param project_id Project ID
  # @param inventory 
  # @param [Hash] opts the optional parameters
  # @return [Inventory]
  describe 'project_project_id_inventory_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_keys_get
  # Get access keys linked to project
  # @param project_id Project ID
  # @param sort sorting name
  # @param order ordering manner
  # @param [Hash] opts the optional parameters
  # @option opts [String] :key_type Filter by key type
  # @return [Array<AccessKey>]
  describe 'project_project_id_keys_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_keys_key_id_delete
  # Removes access key
  # @param project_id Project ID
  # @param key_id key ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_keys_key_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_keys_key_id_put
  # Updates access key
  # @param project_id Project ID
  # @param key_id key ID
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_keys_key_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_keys_post
  # Add access key
  # @param project_id Project ID
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_keys_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_put
  # Update project
  # @param project_id Project ID
  # @param project 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_repositories_get
  # Get repositories
  # @param project_id Project ID
  # @param sort sorting name
  # @param order ordering manner
  # @param [Hash] opts the optional parameters
  # @return [Array<Repository>]
  describe 'project_project_id_repositories_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_repositories_post
  # Add repository
  # @param project_id Project ID
  # @param repository 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_repositories_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_repositories_repository_id_delete
  # Removes repository
  # @param project_id Project ID
  # @param repository_id repository ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_repositories_repository_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_tasks_get
  # Get Tasks related to current project
  # @param project_id Project ID
  # @param [Hash] opts the optional parameters
  # @return [Array<Task>]
  describe 'project_project_id_tasks_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_tasks_last_get
  # Get last 200 Tasks related to current project
  # @param project_id Project ID
  # @param [Hash] opts the optional parameters
  # @return [Array<Task>]
  describe 'project_project_id_tasks_last_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_tasks_post
  # Starts a job
  # @param project_id Project ID
  # @param task 
  # @param [Hash] opts the optional parameters
  # @return [Task]
  describe 'project_project_id_tasks_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_tasks_task_id_delete
  # Deletes task (including output)
  # @param project_id Project ID
  # @param task_id task ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_tasks_task_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_tasks_task_id_get
  # Get a single task
  # @param project_id Project ID
  # @param task_id task ID
  # @param [Hash] opts the optional parameters
  # @return [Task]
  describe 'project_project_id_tasks_task_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_tasks_task_id_output_get
  # Get task output
  # @param project_id Project ID
  # @param task_id task ID
  # @param [Hash] opts the optional parameters
  # @return [Array<TaskOutput>]
  describe 'project_project_id_tasks_task_id_output_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_templates_get
  # Get template
  # @param project_id Project ID
  # @param sort sorting name
  # @param order ordering manner
  # @param [Hash] opts the optional parameters
  # @return [Array<Template>]
  describe 'project_project_id_templates_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_templates_post
  # create template
  # @param project_id Project ID
  # @param template 
  # @param [Hash] opts the optional parameters
  # @return [Template]
  describe 'project_project_id_templates_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_templates_template_id_delete
  # Removes template
  # @param project_id Project ID
  # @param template_id template ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_templates_template_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_templates_template_id_get
  # Get template
  # @param project_id Project ID
  # @param template_id template ID
  # @param [Hash] opts the optional parameters
  # @return [Template]
  describe 'project_project_id_templates_template_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_templates_template_id_put
  # Updates template
  # @param project_id Project ID
  # @param template_id template ID
  # @param template 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_templates_template_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_users_get
  # Get users linked to project
  # @param project_id Project ID
  # @param sort sorting name
  # @param order ordering manner
  # @param [Hash] opts the optional parameters
  # @return [Array<User>]
  describe 'project_project_id_users_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_users_post
  # Link user to project
  # @param project_id Project ID
  # @param user 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_users_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_users_user_id_admin_delete
  # Revoke admin privileges
  # @param project_id Project ID
  # @param user_id User ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_users_user_id_admin_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_users_user_id_admin_post
  # Makes user admin
  # @param project_id Project ID
  # @param user_id User ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_users_user_id_admin_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_users_user_id_delete
  # Removes user from project
  # @param project_id Project ID
  # @param user_id User ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_users_user_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_views_get
  # Get view
  # @param project_id Project ID
  # @param [Hash] opts the optional parameters
  # @return [Array<View>]
  describe 'project_project_id_views_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_views_post
  # create view
  # @param project_id Project ID
  # @param view 
  # @param [Hash] opts the optional parameters
  # @return [View]
  describe 'project_project_id_views_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_views_view_id_delete
  # Removes view
  # @param project_id Project ID
  # @param view_id view ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_views_view_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_views_view_id_get
  # Get view
  # @param project_id Project ID
  # @param view_id view ID
  # @param [Hash] opts the optional parameters
  # @return [View]
  describe 'project_project_id_views_view_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for project_project_id_views_view_id_put
  # Updates view
  # @param project_id Project ID
  # @param view_id view ID
  # @param view 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'project_project_id_views_view_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
