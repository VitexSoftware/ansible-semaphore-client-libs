/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.8.34
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Login struct for Login
type Login struct {
	// Username/Email address
	Auth *string `json:"auth,omitempty"`
	// Password
	Password *string `json:"password,omitempty"`
}

// NewLogin instantiates a new Login object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogin() *Login {
	this := Login{}
	return &this
}

// NewLoginWithDefaults instantiates a new Login object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginWithDefaults() *Login {
	this := Login{}
	return &this
}

// GetAuth returns the Auth field value if set, zero value otherwise.
func (o *Login) GetAuth() string {
	if o == nil || o.Auth == nil {
		var ret string
		return ret
	}
	return *o.Auth
}

// GetAuthOk returns a tuple with the Auth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Login) GetAuthOk() (*string, bool) {
	if o == nil || o.Auth == nil {
		return nil, false
	}
	return o.Auth, true
}

// HasAuth returns a boolean if a field has been set.
func (o *Login) HasAuth() bool {
	if o != nil && o.Auth != nil {
		return true
	}

	return false
}

// SetAuth gets a reference to the given string and assigns it to the Auth field.
func (o *Login) SetAuth(v string) {
	o.Auth = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *Login) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Login) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *Login) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *Login) SetPassword(v string) {
	o.Password = &v
}

func (o Login) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Auth != nil {
		toSerialize["auth"] = o.Auth
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableLogin struct {
	value *Login
	isSet bool
}

func (v NullableLogin) Get() *Login {
	return v.value
}

func (v *NullableLogin) Set(val *Login) {
	v.value = val
	v.isSet = true
}

func (v NullableLogin) IsSet() bool {
	return v.isSet
}

func (v *NullableLogin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogin(val *Login) *NullableLogin {
	return &NullableLogin{value: val, isSet: true}
}

func (v NullableLogin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


