/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.8.34
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Template struct for Template
type Template struct {
	Id *int32 `json:"id,omitempty"`
	ProjectId *int32 `json:"project_id,omitempty"`
	InventoryId *int32 `json:"inventory_id,omitempty"`
	RepositoryId *int32 `json:"repository_id,omitempty"`
	EnvironmentId *int32 `json:"environment_id,omitempty"`
	ViewId *int32 `json:"view_id,omitempty"`
	Alias *string `json:"alias,omitempty"`
	Playbook *string `json:"playbook,omitempty"`
	Arguments *string `json:"arguments,omitempty"`
	Description *string `json:"description,omitempty"`
	OverrideArgs *bool `json:"override_args,omitempty"`
}

// NewTemplate instantiates a new Template object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplate() *Template {
	this := Template{}
	return &this
}

// NewTemplateWithDefaults instantiates a new Template object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateWithDefaults() *Template {
	this := Template{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Template) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Template) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Template) SetId(v int32) {
	o.Id = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *Template) GetProjectId() int32 {
	if o == nil || o.ProjectId == nil {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetProjectIdOk() (*int32, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *Template) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *Template) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetInventoryId returns the InventoryId field value if set, zero value otherwise.
func (o *Template) GetInventoryId() int32 {
	if o == nil || o.InventoryId == nil {
		var ret int32
		return ret
	}
	return *o.InventoryId
}

// GetInventoryIdOk returns a tuple with the InventoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetInventoryIdOk() (*int32, bool) {
	if o == nil || o.InventoryId == nil {
		return nil, false
	}
	return o.InventoryId, true
}

// HasInventoryId returns a boolean if a field has been set.
func (o *Template) HasInventoryId() bool {
	if o != nil && o.InventoryId != nil {
		return true
	}

	return false
}

// SetInventoryId gets a reference to the given int32 and assigns it to the InventoryId field.
func (o *Template) SetInventoryId(v int32) {
	o.InventoryId = &v
}

// GetRepositoryId returns the RepositoryId field value if set, zero value otherwise.
func (o *Template) GetRepositoryId() int32 {
	if o == nil || o.RepositoryId == nil {
		var ret int32
		return ret
	}
	return *o.RepositoryId
}

// GetRepositoryIdOk returns a tuple with the RepositoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetRepositoryIdOk() (*int32, bool) {
	if o == nil || o.RepositoryId == nil {
		return nil, false
	}
	return o.RepositoryId, true
}

// HasRepositoryId returns a boolean if a field has been set.
func (o *Template) HasRepositoryId() bool {
	if o != nil && o.RepositoryId != nil {
		return true
	}

	return false
}

// SetRepositoryId gets a reference to the given int32 and assigns it to the RepositoryId field.
func (o *Template) SetRepositoryId(v int32) {
	o.RepositoryId = &v
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise.
func (o *Template) GetEnvironmentId() int32 {
	if o == nil || o.EnvironmentId == nil {
		var ret int32
		return ret
	}
	return *o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetEnvironmentIdOk() (*int32, bool) {
	if o == nil || o.EnvironmentId == nil {
		return nil, false
	}
	return o.EnvironmentId, true
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *Template) HasEnvironmentId() bool {
	if o != nil && o.EnvironmentId != nil {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given int32 and assigns it to the EnvironmentId field.
func (o *Template) SetEnvironmentId(v int32) {
	o.EnvironmentId = &v
}

// GetViewId returns the ViewId field value if set, zero value otherwise.
func (o *Template) GetViewId() int32 {
	if o == nil || o.ViewId == nil {
		var ret int32
		return ret
	}
	return *o.ViewId
}

// GetViewIdOk returns a tuple with the ViewId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetViewIdOk() (*int32, bool) {
	if o == nil || o.ViewId == nil {
		return nil, false
	}
	return o.ViewId, true
}

// HasViewId returns a boolean if a field has been set.
func (o *Template) HasViewId() bool {
	if o != nil && o.ViewId != nil {
		return true
	}

	return false
}

// SetViewId gets a reference to the given int32 and assigns it to the ViewId field.
func (o *Template) SetViewId(v int32) {
	o.ViewId = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *Template) GetAlias() string {
	if o == nil || o.Alias == nil {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetAliasOk() (*string, bool) {
	if o == nil || o.Alias == nil {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *Template) HasAlias() bool {
	if o != nil && o.Alias != nil {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *Template) SetAlias(v string) {
	o.Alias = &v
}

// GetPlaybook returns the Playbook field value if set, zero value otherwise.
func (o *Template) GetPlaybook() string {
	if o == nil || o.Playbook == nil {
		var ret string
		return ret
	}
	return *o.Playbook
}

// GetPlaybookOk returns a tuple with the Playbook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetPlaybookOk() (*string, bool) {
	if o == nil || o.Playbook == nil {
		return nil, false
	}
	return o.Playbook, true
}

// HasPlaybook returns a boolean if a field has been set.
func (o *Template) HasPlaybook() bool {
	if o != nil && o.Playbook != nil {
		return true
	}

	return false
}

// SetPlaybook gets a reference to the given string and assigns it to the Playbook field.
func (o *Template) SetPlaybook(v string) {
	o.Playbook = &v
}

// GetArguments returns the Arguments field value if set, zero value otherwise.
func (o *Template) GetArguments() string {
	if o == nil || o.Arguments == nil {
		var ret string
		return ret
	}
	return *o.Arguments
}

// GetArgumentsOk returns a tuple with the Arguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetArgumentsOk() (*string, bool) {
	if o == nil || o.Arguments == nil {
		return nil, false
	}
	return o.Arguments, true
}

// HasArguments returns a boolean if a field has been set.
func (o *Template) HasArguments() bool {
	if o != nil && o.Arguments != nil {
		return true
	}

	return false
}

// SetArguments gets a reference to the given string and assigns it to the Arguments field.
func (o *Template) SetArguments(v string) {
	o.Arguments = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Template) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Template) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Template) SetDescription(v string) {
	o.Description = &v
}

// GetOverrideArgs returns the OverrideArgs field value if set, zero value otherwise.
func (o *Template) GetOverrideArgs() bool {
	if o == nil || o.OverrideArgs == nil {
		var ret bool
		return ret
	}
	return *o.OverrideArgs
}

// GetOverrideArgsOk returns a tuple with the OverrideArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetOverrideArgsOk() (*bool, bool) {
	if o == nil || o.OverrideArgs == nil {
		return nil, false
	}
	return o.OverrideArgs, true
}

// HasOverrideArgs returns a boolean if a field has been set.
func (o *Template) HasOverrideArgs() bool {
	if o != nil && o.OverrideArgs != nil {
		return true
	}

	return false
}

// SetOverrideArgs gets a reference to the given bool and assigns it to the OverrideArgs field.
func (o *Template) SetOverrideArgs(v bool) {
	o.OverrideArgs = &v
}

func (o Template) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ProjectId != nil {
		toSerialize["project_id"] = o.ProjectId
	}
	if o.InventoryId != nil {
		toSerialize["inventory_id"] = o.InventoryId
	}
	if o.RepositoryId != nil {
		toSerialize["repository_id"] = o.RepositoryId
	}
	if o.EnvironmentId != nil {
		toSerialize["environment_id"] = o.EnvironmentId
	}
	if o.ViewId != nil {
		toSerialize["view_id"] = o.ViewId
	}
	if o.Alias != nil {
		toSerialize["alias"] = o.Alias
	}
	if o.Playbook != nil {
		toSerialize["playbook"] = o.Playbook
	}
	if o.Arguments != nil {
		toSerialize["arguments"] = o.Arguments
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.OverrideArgs != nil {
		toSerialize["override_args"] = o.OverrideArgs
	}
	return json.Marshal(toSerialize)
}

type NullableTemplate struct {
	value *Template
	isSet bool
}

func (v NullableTemplate) Get() *Template {
	return v.value
}

func (v *NullableTemplate) Set(val *Template) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplate(val *Template) *NullableTemplate {
	return &NullableTemplate{value: val, isSet: true}
}

func (v NullableTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


